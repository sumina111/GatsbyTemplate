{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","m","module","exports","require","default","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","TemplateWrapper","user","window","netlifyIdentity","currentUser","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","pageQuery","className","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","title","site","siteMetadata","reactstrap__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","to","href","_public_static_d_2677988954_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-404-js-5342ac1834e8f8d5436e.js","sourcesContent":["import React from 'react'\nimport { Container } from 'reactstrap'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Container>\n    <Layout>\n      <h1>NOT FOUND</h1>\n      <p>You just hit a route that doesn't exist... the sadness.</p>\n    </Layout>\n  </Container>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Link from \"gatsby-link\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\n// code syntax-highlighting theme\n// feel free to change it to another one\n//import \"prismjs/themes/prism-twilight.css\";\n\n// main site style\n//import './index.scss';\n\nconst TemplateWrapper = ({ children, data }) => {\n  let user;\n  if (typeof window !== \"undefined\") {\n    user = window.netlifyIdentity && window.netlifyIdentity.currentUser();\n  }\n  return (\n    <StaticQuery\n      query={pageQuery}\n      render={data => (\n        <div className=\"App\">\n          <Helmet title={data.site.siteMetadata.title} />\n          <div className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <Container>\n              <Link to=\"/\" className=\"navbar-brand\">\n                {data.site.siteMetadata.title}\n              </Link>\n              <ul className=\"nav navbar-nav\">\n                {user && (\n                  <li className=\"nav-item\">\n                    <a href=\"/admin\" className=\"nav-link\">\n                      Admin\n                    </a>\n                  </li>\n                )}\n              </ul>\n            </Container>\n          </div>\n          <div className=\"pageContent\">{children}</div>\n        </div>\n      )}\n    />\n  );\n};\n\nTemplateWrapper.propTypes = {\n  children: PropTypes.object\n};\n\nconst pageQuery = graphql`\n  query LayoutIndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default TemplateWrapper;\n"],"sourceRoot":""}