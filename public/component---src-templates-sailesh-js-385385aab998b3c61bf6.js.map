{"version":3,"sources":["webpack:///./src/templates/sailesh.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout/index.js"],"names":["Sailesh","render","console","log","this","props","_this$props$data$mark","data","markdownRemark","frontmatter","html","title","contentType","path","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","to","dangerouslySetInnerHTML","__html","Component","pageQuery","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","TemplateWrapper","user","window","netlifyIdentity","currentUser","gatsby__WEBPACK_IMPORTED_MODULE_6__","className","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","site","siteMetadata","reactstrap__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","href","_public_static_d_2677988954_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-templates-sailesh-js-385385aab998b3c61bf6.js","sourcesContent":["import React, { Component } from \"react\";\nimport Link from \"gatsby-link\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nexport default class Sailesh extends Component {\n  render() {\n    console.log(this.props);\n    const {\n      data: {\n        markdownRemark: { frontmatter, html }\n      }\n    } = this.props;\n    const { title, contentType, path } = frontmatter;\n    return (\n      <Layout>\n        <h1>{title}</h1>\n        <Link to=\"/\">\n          {contentType} {path}\n        </Link>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    markdownRemark(frontmatter: { contentType: { eq: \"sailesh\" } }) {\n      frontmatter {\n        title\n        contentType\n        path\n      }\n      html\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport Link from \"gatsby-link\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\n// code syntax-highlighting theme\n// feel free to change it to another one\n//import \"prismjs/themes/prism-twilight.css\";\n\n// main site style\n//import './index.scss';\n\nconst TemplateWrapper = ({ children, data }) => {\n  let user;\n  if (typeof window !== \"undefined\") {\n    user = window.netlifyIdentity && window.netlifyIdentity.currentUser();\n  }\n  return (\n    <StaticQuery\n      query={pageQuery}\n      render={data => (\n        <div className=\"App\">\n          <Helmet title={data.site.siteMetadata.title} />\n          <div className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <Container>\n              <Link to=\"/\" className=\"navbar-brand\">\n                {data.site.siteMetadata.title}\n              </Link>\n              <ul className=\"nav navbar-nav\">\n                {user && (\n                  <li className=\"nav-item\">\n                    <a href=\"/admin\" className=\"nav-link\">\n                      Admin\n                    </a>\n                  </li>\n                )}\n              </ul>\n            </Container>\n          </div>\n          <div className=\"pageContent\">{children}</div>\n        </div>\n      )}\n    />\n  );\n};\n\nTemplateWrapper.propTypes = {\n  children: PropTypes.object\n};\n\nconst pageQuery = graphql`\n  query LayoutIndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default TemplateWrapper;\n"],"sourceRoot":""}